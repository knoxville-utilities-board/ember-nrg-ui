trigger:
- release
- master
pr:
- master

jobs:
- job: Ember_Tests

  pool:
    vmImage: 'vs2017-win2016'

  steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '8.x'
      displayName: 'Install Node.js'

    - script: |
        npm install -g yarn ember-cli        
      displayName: 'Setup global tools'

    - script: |
        yarn install
      displayName: 'Install Dependencies'

    - script: |
        yarn run lint:hbs
      displayName: 'Run Handlebars Linter'

    - script: |
        yarn run lint:js
      displayName: 'Run Javascript Linter'

    - script: |
        yarn test -r xunit
      displayName: 'Run Ember Tests'

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'jUnit'
        testResultsFiles: '*-tests.xml'

- job: Ember_Try

  condition: startsWith(variables['build.sourceBranch'], 'refs/pull')

  pool:
    vmImage: 'vs2017-win2016'

  strategy:
    maxParallel: 6
    matrix:
      LTS_2_16:
        EMBER_TRY_SCENARIO: ember-lts-2.16
      LTS_2_18:
        EMBER_TRY_SCENARIO: ember-lts-2.18
      LTS_3.4:
        EMBER_TRY_SCENARIO: ember-lts-3.4
      # Release:
      #   EMBER_TRY_SCENARIO: ember-release
      #   allowedToFail: true
      # Beta:
      #   EMBER_TRY_SCENARIO: ember-beta
      #   allowedToFail: true
      # Canary:
      #   EMBER_TRY_SCENARIO: ember-canary
      #   allowedToFail: true

  steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '8.x'
      displayName: 'Install Node.js'

    - script: |
        npm install -g yarn ember-cli
      displayName: 'Setup global tools'
      
    - script: |
        yarn install
      displayName: 'Install Dependencies'

    - script: |
        ember try:one $(EMBER_TRY_SCENARIO) --skip-cleanup=true
      displayName: 'Run Ember Try'

- job: Release_Deployment

  dependsOn: Ember_Tests

  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/release'))

  pool:
    vmImage: 'Ubuntu 16.04'

  steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '8.x'
      displayName: 'Install Node.js'

    - script: |
        npm install -g yarn ember-cli
      displayName: 'Setup global tools'
      
    - script: |
        yarn install
      displayName: 'Install Dependencies'

    - script: |
        VERSION="$(node -p "require('./package.json').version")"
        echo "##vso[task.setvariable variable=packageVersion]$VERSION"
      displayName: 'Get Package Version'

    - task: GitHubRelease@0
      displayName: 'Create GitHub release'
      inputs:
        gitHubConnection: Github
        repositoryName: 'knoxville-utilities-board/ember-nrg-ui'
        tagSource: manual
        tag: '$(packageVersion)'

    - script: |
        git fetch origin tag $(packageVersion)
      displayName: 'Update Local Tags'    

    - script: |
        ember build --environment production
      displayName: 'Build Dummy App'

    - task: PublishPipelineArtifact@0
      inputs:
        targetPath: dist
        artifactName: dummy-app

    - task: Npm@1
      displayName: 'Publish to NPM'
      inputs:
        command: publish
        verbose: false
        publishEndpoint: NPM

